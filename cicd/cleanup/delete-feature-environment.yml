delete-feature-environment:
  stage: cleanup
  variables:
    KUBECONFIG: /tmp/config
    KUBE_NAMESPACE: $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
    GIT_STRATEGY: none
    BD_PROJECT: RPIM-$CI_PROJECT_NAME
  tags:
    - dev
  script:
    -  |
        # PRE-REQS
        apk add -U openssl curl tar gzip bash ca-certificates git jq
        curl -sSL -o /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
        curl -sSL -O https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.28-r0/glibc-2.28-r0.apk
        apk add glibc-2.28-r0.apk
        rm glibc-2.28-r0.apk
        curl -sSL -o /usr/bin/kubectl "https://storage.googleapis.com/kubernetes-release/release/v${KUBERNETES_VERSION}/bin/linux/amd64/kubectl"
        chmod +x /usr/bin/kubectl
        kubectl version --client
        # DELETE NAMESPACE
        echo ${DEV_KUBE_CONFIG} | base64 -d > ${KUBECONFIG}
        kubectl config use-context default-context
        kubectl delete ns "$KUBE_NAMESPACE"
        # DELETE BLACKDUCK VERSION
        # GET A BEARER token
        AUTH=$(curl -X POST \
          --header "Accept: application/vnd.blackducksoftware.user-4+json" \
          --header "Authorization: token $BLACKDUCK_API_KEY" \
          "https://hubeval91.blackducksoftware.com/api/tokens/authenticate" \
          | jq .bearerToken | tr -d \")
        # GET THE VERSIONS HREF BY PROJECT NAME
        VERSIONS=$(curl -X GET \
          --header "Accept: application/vnd.blackducksoftware.project-detail-4+json" \
          --header "Authorization: Bearer $AUTH" \
          "https://hubeval91.blackducksoftware.com/api/projects?limit=999" \
          | jq --arg PROJECT "$BD_PROJECT" '.items[] | select(.name==$PROJECT) | ._meta.links[] | select(.rel=="versions") | .href' | tr -d \")
        # CHECK TO SEE IF THERE IS A VERSION RELATED TO THIS BRANCH AND IF SO DELETE VERSION
        ### CHECK
        V=$(curl -X GET \
          --header "Accept: application/vnd.blackducksoftware.project-detail-4+json" \
          --header "Authorization: Bearer $AUTH" \
          "$VERSIONS" \
          | jq --arg CI_COMMIT_REF_NAME "$CI_COMMIT_REF_NAME" '.items[] | select(.versionName==$CI_COMMIT_REF_NAME) | ._meta.href' | tr -d \")
        ### DELETE
        if [ -z "$V" ]; then
          echo "No version called $CI_COMMIT_REF_NAME in project $PROJECT found - skipping cleanup" && exit 0
        else
          curl -X DELETE --header "Authorization: Bearer $AUTH" "$V" && echo "Deleted version $CI_COMMIT_REF_NAME" || exit 1
        fi
  environment:
    name: $CI_PROJECT_NAME/review/$CI_COMMIT_REF_NAME
    action: stop
  when: manual
  allow_failure: true
  only:
    refs: 
      - branches
    kubernetes: active
  except:
    - master
